dnl Process this file with autoconf to produce a configure script.
AC_INIT(makelib/botnet.c)

AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_ISC_POSIX
AC_ARG_PROGRAM

#
# Making releases:
#   BN_MICRO_VERSION += 1;
#   BN_INTERFACE_AGE += 1;
#   BN_BINARY_AGE += 1;
# if any functions have been added, set BN_INTERFACE_AGE to 0.
# if backwards compatibility has been broken,
# set BN_BINARY_AGE _and_ BN_INTERFACE_AGE to 0.
#
BN_MAJOR_VERSION=1
BN_MINOR_VERSION=6
BN_MICRO_VERSION=4
BN_INTERFACE_AGE=4
BN_BINARY_AGE=4
BN_VERSION=$BN_MAJOR_VERSION.$BN_MINOR_VERSION.$BN_MICRO_VERSION

AC_SUBST(BN_MAJOR_VERSION)
AC_SUBST(BN_MINOR_VERSION)
AC_SUBST(BN_MICRO_VERSION)
AC_SUBST(BN_VERSION)
AC_SUBST(BN_INTERFACE_AGE)
AC_SUBST(BN_BINARY_AGE)

# libtool versioning
LT_RELEASE=$BN_MAJOR_VERSION.$BN_MINOR_VERSION
LT_CURRENT=`expr $BN_MICRO_VERSION - $BN_INTERFACE_AGE`
LT_REVISION=$BN_INTERFACE_AGE
LT_AGE=`expr $BN_BINARY_AGE - $BN_INTERFACE_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

VERSION=$BN_VERSION
PACKAGE=botnet

# Auto Make
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE($PACKAGE,$VERSION)
AM_MAINTAINER_MODE

AM_PROG_LIBTOOL

CFLAGS="$CFLAGS -pthread -D_REENTRANT"
if test "$GCC" = "yes"
then
	CFLAGS="$CFLAGS -Wall"
fi
CFLAGS_SERVER_TYPE="IRCU"
O_SERVER_TYPE="ircu"

AC_ARG_ENABLE(debug,
[  --enable-debug          Enables debug option (default=no)],
[case "${enableval}" in
  yes) debug=true ;;
  no)  debug=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
esac],[debug=false])
if test "$debug" = "true"; then
  CFLAGS="$CFLAGS ""-DDEBUG "
fi

AC_ARG_ENABLE(memcpycheck,
[  --enable-memcpycheck    Enables memcpy check (default=no)],
[case "${enableval}" in
  yes) memcpycheck=true ;;
  no)  memcpycheck=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-memcpycheck) ;;
esac],[memcpycheck=false])
if test "$memcpycheck" = "true"; then
  CFLAGS="$CFLAGS ""-DMEMCPY_CHECK "
fi

AC_ARG_ENABLE(context,
[  --enable-context        Enables context debug info (default=no)],
[case "${enableval}" in
  yes) context=true ;;
  no)  context=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-context) ;;
esac],[context=false])
if test "$context" = "true"; then
  CFLAGS="$CFLAGS ""-DCONTEXT "
fi

AC_ARG_ENABLE(server,
[  --enable-server         Enables building of servers (default=no)],
[case "${enableval}" in
  yes) server=true ;;
  no)  server=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-server) ;;
esac],[server=false])
if test "$server" = "true"; then
  CFLAGS="$CFLAGS ""-DSERVER "
  O_SERV="serv"
  BN_SERVER="yes"
else
  BN_SERVER="no"
fi

AC_ARG_ENABLE(nonstd,
[  --enable-nonstd         Enables non-standard ircd option (default=no) Use if you plan to connect to a NON STANDARD irc server (sending \":irc.server Code Param1 Param2: trailing\" for example)],
[case "${enableval}" in
  yes) nonstd=true ;;
  no)  nonstd=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-nonstd) ;;
esac],[nonstd=false])
if test "$nonstd" = "true"; then
  CFLAGS="$CFLAGS ""-DNON_STANDARD "
fi

AC_ARG_ENABLE(ircu,
[  --enable-ircu           Enables ircu ircd option for server capabilities (default=ircu)],
[case "${enableval}" in
  yes) ircu=true ;;
  no)  ircu=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-ircu) ;;
esac],[ircu=false])
if test "$ircu" = "true"; then
  O_SERVER_TYPE="ircu"
  CFLAGS_SERVER_TYPE="IRCU"
fi

AC_ARG_ENABLE(bahamut,
[  --enable-bahamut        Enables bahamut ircd option for server capabilities (default=ircu)],
[case "${enableval}" in
  yes) bahamut=true ;;
  no)  bahamut=false ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-bahamut) ;;
esac],[bahamut=false])
if test "$bahamut" = "true"; then
  O_SERVER_TYPE="bahamut"
  CFLAGS_SERVER_TYPE="BAHAMUT"
fi

CFLAGS="$CFLAGS -D$CFLAGS_SERVER_TYPE"
AC_SUBST(O_SERVER_TYPE)
AC_SUBST(BN_SERVER)
AC_SUBST(O_SERV)

dnl Checks for libraries.
SOLARIS=""
AC_CHECK_LIB(pthread, pthread_create,BN_PTHREAD_LIB="-pthread")
AC_CHECK_LIB(c_r, pthread_create,BN_PTHREAD_LIB="-pthread")
AC_CHECK_LIB(socket, socket,SOLARIS="-lnsl -lsocket")

if test ! "$BN_PTHREAD_LIB"; then
  AC_MSG_ERROR("Cannot find pthread functions \(neither in libpthread nor in libc_r\)")
fi

AC_SUBST(BN_PTHREAD_LIB)
AC_SUBST(SOLARIS)

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h sys/time.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_PID_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl Checks for library functions.
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(select socket strstr sem_init strtok_r)

AC_OUTPUT([
Makefile
botnet-config
makelib/Makefile
makelib/Windows/Makefile
makelib/Windows/Botnet/Makefile
example/Makefile
example/Windows/Makefile
example/Windows/Example/Makefile
], [chmod +x botnet-config])

echo ""
echo "*************************"
echo "*  Compilation options  *"
echo "*************************"
if test "$debug" = "true"; then
  tmp="ON"
else
  tmp="OFF"
fi
echo "Debug mode          : $tmp"
if test "$memcpycheck" = "true"; then
  tmp="ON"
else
  tmp="OFF"
fi
echo "Memcpy Check mode   : $tmp"
if test "$context" = "true"; then
  tmp="ON"
else
  tmp="OFF"
fi
echo "Context infos mode  : $tmp"
if test "$nonstd" = "true"; then
  tmp="ON"
else
  tmp="OFF"
fi
echo "Non standard ircd   : $tmp"
if test "$server" = "true"; then
  tmp="ON"
  tmp2="Ircd server type  : $O_SERVER_TYPE"
else
  tmp="OFF"
fi
echo "Server capabilities : $tmp"
echo $tmp2
echo
echo
